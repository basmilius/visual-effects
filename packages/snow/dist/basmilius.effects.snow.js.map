{"version":3,"file":"basmilius.effects.snow.js","sources":["../src/consts.ts","../src/simulation.ts"],"sourcesContent":["import { mulberry32 } from \"@basmilius/effects-common\";\n\nexport const MULBERRY = mulberry32();\n","import { LimitedFrameRateCanvas } from \"@basmilius/effects-common\";\nimport { MULBERRY } from \"./consts\";\nimport { Snowflake } from \"./snowflake\";\n\nexport class SnowSimulation extends LimitedFrameRateCanvas {\n    private readonly fillStyle: string;\n    private readonly maxParticles: number;\n    private snowFlakes: Snowflake[];\n    private readonly speed: number;\n\n    private angle: number = 0;\n    private ratio: number = 1;\n\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 60);\n\n        this.canvas.style.position = \"absolute\";\n        this.canvas.style.top = \"0\";\n        this.canvas.style.left = \"0\";\n        this.canvas.style.height = \"100%\";\n        this.canvas.style.width = \"100%\";\n\n        this.fillStyle = canvas.dataset.fillStyle || \"rgb(255 255 255 / .75)\";\n        this.maxParticles = parseInt(canvas.dataset.particles || \"200\");\n        this.snowFlakes = [];\n        this.speed = parseFloat(canvas.dataset.speed || \"2.0\");\n\n        if (this.isSmall) {\n            this.maxParticles /= 2;\n        }\n\n        for (let i = 0; i < this.maxParticles; ++i) {\n            this.snowFlakes.push({\n                x: MULBERRY.next(),\n                y: MULBERRY.next() - 1,\n                density: MULBERRY.next() * this.maxParticles,\n                radius: MULBERRY.next() * 6 + 2,\n            });\n        }\n    }\n\n    draw(): void {\n        this.canvas.height = this.height;\n        this.canvas.width = this.width;\n\n        this.context.clearRect(0, 0, this.width, this.height);\n        this.context.fillStyle = this.fillStyle;\n\n        this.context.beginPath();\n\n        this.snowFlakes.forEach(snowFlake => {\n            this.context.moveTo(snowFlake.x * this.width, snowFlake.y * this.height);\n            this.context.arc(snowFlake.x * this.width, snowFlake.y * this.height, snowFlake.radius * this.ratio, 0, Math.PI * 2, true);\n        });\n\n        this.context.fill();\n    }\n\n    tick(): void {\n        let speedFactor = (this.height / (420 * this.ratio) / this.speed) * this.deltaFactor;\n\n        this.angle += 0.02 * speedFactor;\n\n        this.snowFlakes.forEach((snowFlake, index) => {\n            snowFlake.x += (Math.sin(this.angle + snowFlake.density) * 2) / (5000 * speedFactor);\n            snowFlake.y += (Math.cos(this.angle + snowFlake.density) + 1 + snowFlake.radius / 2) / (1000 * speedFactor);\n\n            if (snowFlake.x > 1.05 || snowFlake.x < -0.05 || snowFlake.y > 1.05) {\n                if (index % 3 > 0) {\n                    this.snowFlakes[index].x = MULBERRY.next();\n                    this.snowFlakes[index].y = -0.05;\n                } else if (Math.sin(this.angle) > 0) {\n                    this.snowFlakes[index].x = -0.05;\n                    this.snowFlakes[index].y = MULBERRY.next();\n                } else {\n                    this.snowFlakes[index].x = 1.05;\n                    this.snowFlakes[index].y = MULBERRY.next();\n                }\n            }\n        });\n    }\n}\n"],"names":["MULBERRY","mulberry32","SnowSimulation","LimitedFrameRateCanvas","constructor","canvas","super","this","style","position","top","left","height","width","fillStyle","dataset","maxParticles","parseInt","particles","snowFlakes","speed","parseFloat","isSmall","i","push","x","next","y","density","radius","draw","context","clearRect","beginPath","forEach","snowFlake","moveTo","arc","ratio","Math","PI","fill","tick","speedFactor","deltaFactor","angle","index","sin","cos"],"mappings":"+GAEO,MAAMA,EAAWC,qBCEXC,UAAuBC,yBAShCC,YAAYC,GACRC,MAAMD,EAAQ,IAJVE,WAAgB,EAChBA,WAAgB,EAKpBA,KAAKF,OAAOG,MAAMC,SAAW,WAC7BF,KAAKF,OAAOG,MAAME,IAAM,IACxBH,KAAKF,OAAOG,MAAMG,KAAO,IACzBJ,KAAKF,OAAOG,MAAMI,OAAS,OAC3BL,KAAKF,OAAOG,MAAMK,MAAQ,OAE1BN,KAAKO,UAAYT,EAAOU,QAAQD,WAAa,yBAC7CP,KAAKS,aAAeC,SAASZ,EAAOU,QAAQG,WAAa,OACzDX,KAAKY,WAAa,GAClBZ,KAAKa,MAAQC,WAAWhB,EAAOU,QAAQK,OAAS,OAE5Cb,KAAKe,UACLf,KAAKS,cAAgB,GAGzB,IAAK,IAAIO,EAAI,EAAGA,EAAIhB,KAAKS,eAAgBO,EACrChB,KAAKY,WAAWK,KAAK,CACjBC,EAAGzB,EAAS0B,OACZC,EAAG3B,EAAS0B,OAAS,EACrBE,QAAS5B,EAAS0B,OAASnB,KAAKS,aAChCa,OAA0B,EAAlB7B,EAAS0B,OAAa,IAK1CI,OACIvB,KAAKF,OAAOO,OAASL,KAAKK,OAC1BL,KAAKF,OAAOQ,MAAQN,KAAKM,MAEzBN,KAAKwB,QAAQC,UAAU,EAAG,EAAGzB,KAAKM,MAAON,KAAKK,QAC9CL,KAAKwB,QAAQjB,UAAYP,KAAKO,UAE9BP,KAAKwB,QAAQE,YAEb1B,KAAKY,WAAWe,SAAQC,IACpB5B,KAAKwB,QAAQK,OAAOD,EAAUV,EAAIlB,KAAKM,MAAOsB,EAAUR,EAAIpB,KAAKK,QACjEL,KAAKwB,QAAQM,IAAIF,EAAUV,EAAIlB,KAAKM,MAAOsB,EAAUR,EAAIpB,KAAKK,OAAQuB,EAAUN,OAAStB,KAAK+B,MAAO,EAAa,EAAVC,KAAKC,IAAQ,MAGzHjC,KAAKwB,QAAQU,OAGjBC,OACI,IAAIC,EAAepC,KAAKK,QAAU,IAAML,KAAK+B,OAAS/B,KAAKa,MAASb,KAAKqC,YAEzErC,KAAKsC,OAAS,IAAOF,EAErBpC,KAAKY,WAAWe,SAAQ,CAACC,EAAWW,KAChCX,EAAUV,GAAiD,EAA3Cc,KAAKQ,IAAIxC,KAAKsC,MAAQV,EAAUP,UAAiB,IAAOe,GACxER,EAAUR,IAAMY,KAAKS,IAAIzC,KAAKsC,MAAQV,EAAUP,SAAW,EAAIO,EAAUN,OAAS,IAAM,IAAOc,IAE3FR,EAAUV,EAAI,MAAQU,EAAUV,GAAK,KAAQU,EAAUR,EAAI,QACvDmB,EAAQ,EAAI,GACZvC,KAAKY,WAAW2B,GAAOrB,EAAIzB,EAAS0B,OACpCnB,KAAKY,WAAW2B,GAAOnB,GAAK,KACrBY,KAAKQ,IAAIxC,KAAKsC,OAAS,GAC9BtC,KAAKY,WAAW2B,GAAOrB,GAAK,IAC5BlB,KAAKY,WAAW2B,GAAOnB,EAAI3B,EAAS0B,SAEpCnB,KAAKY,WAAW2B,GAAOrB,EAAI,KAC3BlB,KAAKY,WAAW2B,GAAOnB,EAAI3B,EAAS0B"}