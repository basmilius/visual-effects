{"version":3,"file":"basmilius.effects.fireworks.js","sources":["../src/consts.ts","../src/explosion.ts","../src/firework.ts","../src/simulation.ts"],"sourcesContent":["import { mulberry32 } from \"@basmilius/effects-common\";\n\nexport const MULBERRY = mulberry32();\n","import { Point } from \"@basmilius/effects-common\";\nimport { MULBERRY } from \"./consts\";\n\nexport class Explosion extends EventTarget {\n    public readonly position: Point;\n    public alpha: number;\n    public readonly angle: number;\n    public readonly brightness: number;\n    public readonly decay: number;\n    public readonly friction: number = 0.95;\n    public readonly gravity: number = 1;\n    public readonly hue: number;\n    public readonly lineWidth: number;\n    public speed: number;\n    public readonly trail: Point[] = [];\n    public readonly trailMemory: number = 5;\n\n    constructor(position: Point, hue: number, lineWidth: number) {\n        super();\n\n        this.position = {...position};\n        this.alpha = 1;\n        this.angle = MULBERRY.nextBetween(0, Math.PI * 2);\n        this.brightness = MULBERRY.nextBetween(50, 80);\n        this.decay = MULBERRY.nextBetween(0.015, 0.03);\n        this.hue = hue + MULBERRY.nextBetween(-50, 50);\n        this.lineWidth = lineWidth;\n        this.speed = MULBERRY.nextBetween(1, 10);\n\n        while (this.trailMemory--) {\n            this.trail.push({...position});\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D): void {\n        const trailEnd = this.trail[this.trail.length - 1];\n\n        ctx.beginPath();\n        ctx.moveTo(trailEnd.x, trailEnd.y);\n        ctx.lineTo(this.position.x, this.position.y);\n        ctx.lineCap = \"round\";\n        ctx.lineWidth = this.lineWidth;\n        ctx.strokeStyle = `hsla(${this.hue}, 100%, ${this.brightness}%, ${this.alpha})`;\n        ctx.stroke();\n    }\n\n    tick(): void {\n        this.trail.pop();\n        this.trail.unshift({...this.position});\n        this.speed *= this.friction;\n\n        this.position.x += Math.cos(this.angle) * this.speed;\n        this.position.y += Math.sin(this.angle) * this.speed + this.gravity;\n\n        this.alpha -= this.decay;\n\n        if (this.alpha <= this.decay) {\n            this.dispatchEvent(new CustomEvent(\"remove\"));\n        }\n    }\n}\n","import { distance, Point } from \"@basmilius/effects-common\";\nimport { MULBERRY } from \"./consts\";\n\nexport class Firework extends EventTarget {\n    public readonly position: Point;\n    public readonly startPosition: Point;\n    public readonly targetPosition: Point;\n    public readonly acceleration: number = 1.05;\n    public readonly angle: number;\n    public readonly brightness: number = MULBERRY.nextBetween(50, 70);\n    public readonly distance: number;\n    public distanceTraveled: number = 0;\n    public readonly hue: number;\n    public readonly lineWidth: number;\n    public speed: number = 1;\n    public targetRadius: number = 1;\n    public readonly trail: Point[] = [];\n    public readonly trailMemory: number = 3;\n\n    constructor(start: Point, target: Point, hue: number, lineWidth: number) {\n        super();\n\n        this.hue = hue;\n        this.lineWidth = lineWidth;\n        this.position = {...start};\n        this.startPosition = {...start};\n        this.targetPosition = {...target};\n        this.angle = Math.atan2(target.y - start.y, target.x - start.x);\n        this.distance = distance(start, target);\n\n        while (this.trailMemory--) {\n            this.trail.push({...start});\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D): void {\n        const hue = this.hue + MULBERRY.nextBetween(-50, 50);\n        const trailEnd = this.trail[this.trail.length - 1];\n\n        ctx.beginPath();\n        ctx.moveTo(trailEnd.x, trailEnd.y);\n        ctx.lineTo(this.position.x, this.position.y);\n        ctx.lineCap = \"round\";\n        ctx.lineWidth = this.lineWidth;\n        ctx.strokeStyle = `hsl(${hue}, 100%, ${this.brightness}%)`;\n        ctx.stroke();\n    }\n\n    tick(): void {\n        this.trail.pop();\n        this.trail.unshift({...this.position});\n\n        if (this.targetRadius < 8) {\n            this.targetRadius += 0.3;\n        } else {\n            this.targetRadius = 1;\n        }\n\n        this.speed *= this.acceleration;\n\n        let x = Math.cos(this.angle) * this.speed;\n        let y = Math.sin(this.angle) * this.speed;\n\n        this.distanceTraveled = distance(this.startPosition, {\n            x: this.position.x + x,\n            y: this.position.y + y\n        });\n\n        if (this.distanceTraveled >= this.distance) {\n            this.dispatchEvent(new CustomEvent(\"remove\"));\n        } else {\n            this.position.x += x;\n            this.position.y += y;\n        }\n    }\n}\n","import { LimitedFrameRateCanvas, Point } from \"@basmilius/effects-common\";\nimport { MULBERRY } from \"./consts\";\nimport { Explosion } from \"./explosion\";\nimport { Firework } from \"./firework\";\n\nexport class FireworkSimulation extends LimitedFrameRateCanvas {\n    private explosions: Explosion[];\n    private fireworks: Firework[];\n    private hue: number = 120;\n    private readonly lineWidth: number;\n    private positionRandom = MULBERRY.fork();\n\n    constructor(canvas: HTMLCanvasElement, lineWidth: number = 6) {\n        super(canvas, 60);\n\n        this.explosions = [];\n        this.fireworks = [];\n\n        this.lineWidth = lineWidth;\n\n        this.canvas.style.position = \"absolute\";\n        this.canvas.style.top = \"0\";\n        this.canvas.style.left = \"0\";\n        this.canvas.style.height = \"100%\";\n        this.canvas.style.width = \"100%\";\n    }\n\n    draw(): void {\n        this.canvas.height = this.height;\n        this.canvas.width = this.width;\n\n        this.context.globalCompositeOperation = \"destination-out\";\n        this.context.fillStyle = \"rgba(0, 0, 0, 0.5)\";\n        this.context.fillRect(0, 0, this.width, this.height);\n        this.context.globalCompositeOperation = \"lighter\";\n\n        this.explosions.forEach(e => e.draw(this.context));\n        this.fireworks.forEach(f => f.draw(this.context));\n    }\n\n    tick(): void {\n        if (this.fireworks.length < 6 && this.ticks % (this.isSmall ? 60 : 30) === 0) {\n            let count = MULBERRY.nextBetween(1, 100) < 10 ? 2 : 1;\n\n            while (count--) {\n                this.hue = MULBERRY.nextBetween(0, 360);\n                this.createFirework();\n            }\n        }\n\n        this.explosions.forEach(e => e.tick());\n        this.fireworks.forEach(f => f.tick());\n    }\n\n    createExplosion(position: Point, hue: number): void {\n        let particles: number = 30;\n\n        while (particles--) {\n            const explosion = new Explosion(position, hue, this.lineWidth);\n\n            explosion.addEventListener(\"remove\", () => this.explosions.splice(this.explosions.indexOf(explosion), 1), {once: true});\n\n            this.explosions.push(explosion);\n        }\n    }\n\n    createFirework(position?: Point): void {\n        const hue = this.hue;\n        const x = position?.x || this.positionRandom.nextBetween(innerWidth * .1, this.width - innerWidth * .1);\n        const y = position?.y || this.height * .1 + this.positionRandom.nextBetween(0, this.height * .5);\n\n        const firework = new Firework({x: x * .5 + innerWidth / 4, y: this.height}, {x, y}, hue, this.lineWidth);\n\n        firework.addEventListener(\"remove\", () => {\n            this.fireworks.splice(this.fireworks.indexOf(firework), 1);\n            this.createExplosion(firework.position, hue);\n        }, {once: true});\n\n        this.fireworks.push(firework);\n    }\n}\n"],"names":["MULBERRY","mulberry32","Explosion","EventTarget","constructor","position","hue","lineWidth","super","this","alpha","angle","nextBetween","Math","PI","brightness","decay","speed","trailMemory","trail","push","draw","ctx","trailEnd","length","beginPath","moveTo","x","y","lineTo","lineCap","strokeStyle","stroke","tick","pop","unshift","friction","cos","sin","gravity","dispatchEvent","CustomEvent","Firework","start","target","startPosition","targetPosition","atan2","distance","targetRadius","acceleration","distanceTraveled","FireworkSimulation","LimitedFrameRateCanvas","canvas","fork","explosions","fireworks","style","top","left","height","width","context","globalCompositeOperation","fillStyle","fillRect","forEach","e","f","ticks","isSmall","count","createFirework","createExplosion","particles","explosion","addEventListener","splice","indexOf","once","positionRandom","innerWidth","firework"],"mappings":"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"}