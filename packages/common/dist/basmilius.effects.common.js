"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.LimitedFrameRateCanvas=class{constructor(t,i){this._current=0,this._delta=0,this._frame=0,this._now=0,this._then=0,this._ticks=0,this._isStopped=!1,this._height=540,this._width=960,this._canvas=t,this._context=t.getContext("2d",{colorSpace:"display-p3"}),this._frameRate=i,this._target=1e3/i,this._boundOnVisibilityChange=this.onVisibilityChange.bind(this),this._boundOnResize=this.onResize.bind(this),document.addEventListener("visibilitychange",this._boundOnVisibilityChange,{passive:!0}),window.addEventListener("resize",this._boundOnResize,{passive:!0})}get canvas(){return this._canvas}get context(){return this._context}get delta(){return this._delta}get deltaFactor(){return 0===this._then?1:this._target/this._delta}get frameRate(){return this._frameRate}get isSmall(){return innerWidth<991}get ticks(){return this._ticks}get height(){return this._height}get width(){return this._width}loop(){this._isStopped||(this._current=Date.now(),this._frame=requestAnimationFrame(this.loop.bind(this)),this._then>0&&this._current-this._then+1<this._target||(this._now=this._current,this._delta=this._now-this._then,++this._ticks,this.tick(),this.draw(),this._then=this._now))}start(){this.onResize(),this._isStopped=!1,this._frame=requestAnimationFrame(this.loop.bind(this))}stop(){this._isStopped=!0,cancelAnimationFrame(this._frame)}draw(){throw new Error("LimitedFrameRateCanvas::draw() should be overwritten.")}tick(){throw new Error("LimitedFrameRateCanvas::tick() should be overwritten.")}destroy(){document.removeEventListener("visibilitychange",this._boundOnVisibilityChange),window.removeEventListener("resize",this._boundOnResize)}onResize(){const{width:t,height:i}=this._canvas.getBoundingClientRect();this._height=i,this._width=t}onVisibilityChange(){cancelAnimationFrame(this._frame),"visible"===document.visibilityState?(this._then=0,this.start()):(this._then=0,this.stop())}},exports.distance=function(t,i){let e=t.x-i.x,s=t.y-i.y;return Math.sqrt(Math.pow(e,2)+Math.pow(s,2))},exports.mulberry32=function t(i){const e=new Uint32Array(1);return e[0]=i,{fork:function(){return t(this.next()*Math.pow(2,32))},next:function(){const t=e[0]=e[0]+1831565813|0;let i=Math.imul(t^t>>>15,1|t);return i=i+Math.imul(i^i>>>7,61|i)^i,((i^i>>>14)>>>0)/4294967296},nextBetween:function(t,i){return this.next()*(i-t)+t}}};//# sourceMappingURL=basmilius.effects.common.js.map
